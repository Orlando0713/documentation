"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[2498],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},s),{},{components:n})):a.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5652:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={title:"CLI"},p=void 0,u={unversionedId:"development/cli",id:"development/cli",title:"CLI",description:"The CLI, command line interface, is a helpful tool that allows you to perform some management functions and additional utilities related to your assistant application.  The full source code is available on github.com/xapp-ai/xapp-cli.",source:"@site/docs/development/cli.md",sourceDirName:"development",slug:"/development/cli",permalink:"/docs/development/cli",draft:!1,editUrl:"https://github.com/xapp-ai/documentation/edit/main/docs/development/cli.md",tags:[],version:"current",frontMatter:{title:"CLI"},sidebar:"docs",previous:{title:"Runtime Environment Variables",permalink:"/docs/development/runtime-environment-variables"},next:{title:"API",permalink:"/docs/development/api"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Authenticating",id:"authenticating",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Information",id:"information",level:2},{value:"Generating Types",id:"generating-types",level:2},{value:"Importing",id:"importing",level:2},{value:"Importing from Dialogflow",id:"importing-from-dialogflow",level:3},{value:"Prerequisites",id:"prerequisites",level:3}],d={toc:c},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The CLI, command line interface, is a helpful tool that allows you to perform some management functions and additional utilities related to your assistant application.  The full source code is available on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/xapp-ai/xapp-cli"},"github.com/xapp-ai/xapp-cli"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @xapp/cli\n")),(0,r.kt)("p",null,"Confirm your installation with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp -V\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Currently only Windows WSL2 and macOS are supported.  The behavior on Windows Shell is unknown.")),(0,r.kt)("h2",{id:"authenticating"},"Authenticating"),(0,r.kt)("p",null,"Before running any command, you will need to first authenticate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp login\n")),(0,r.kt)("p",null,"And while not required, you can also logout"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp logout\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"You can configure the CLI to point to different OC Studio environments."),(0,r.kt)("p",null,"Recommended approach is to modify the configuration JSON file found at ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.xapp/cli_config")," and then adding different profiles."),(0,r.kt)("p",null,"For example, if you want to add a profile called ",(0,r.kt)("inlineCode",{parentName:"p"},"stentor"),", fill in the parameters under `"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "profiles": {\n    "default": {},\n    "stentor": {\n      "basePath": "",\n      "authPath": "",\n      "clientId": "",\n      "path": "auth",\n      "tokenPath": "oauth/token"\n    }\n  },\n  "created": "2021-02-23T22:30:17.345Z",\n  "modified": "2021-11-09T17:17:32.694Z",\n  "currentProfile": "stentor"\n}\n')),(0,r.kt)("p",null,"Then, to use this profile run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp set -p stentor\n")),(0,r.kt)("p",null,"To reset back to the default, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp set -p default\n")),(0,r.kt)("h2",{id:"information"},"Information"),(0,r.kt)("p",null,"You can query general descriptive information about an application by application ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp info {{appId}}\n")),(0,r.kt)("h2",{id:"generating-types"},"Generating Types"),(0,r.kt)("p",null,"When developing, it can be helpful to have access to the intents requests and their possible slot values.  You can use the CLI to generate a TypeScript file with all the requests that are specific to your interaction model."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'xapp types -h "/*! Copyright (c) 2022, XAPP AI */" -f requests.ts -m 50 ./src/models  {{appId}}\n')),(0,r.kt)("p",null,"The above command will generate a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"requests.ts")," at the ",(0,r.kt)("inlineCode",{parentName:"p"},"./src/models")," directory with a header at the top to prevent any lint errors.  The ",(0,r.kt)("inlineCode",{parentName:"p"},"-m 50")," states to generate a type based on an entities values up to a max of 50 values, otherwise it will set the type as ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),".  Optional fields are ",(0,r.kt)("inlineCode",{parentName:"p"},"-h"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"-f"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"-m"),"."),(0,r.kt)("h2",{id:"importing"},"Importing"),(0,r.kt)("h3",{id:"importing-from-dialogflow"},"Importing from Dialogflow"),(0,r.kt)("p",null,"You can import an existing project from Dialogflow ES.  "),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Studio Organization"),(0,r.kt)("li",{parentName:"ul"},"GCP Service Account with Dialogflow Admin permissions credentials JSON file")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xapp import -p d -c {path-to-JSON-credentials-file} -o {orgId-for-import}\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Some Dialogflow features are not supported and will not be imported.")))}f.isMDXComponent=!0}}]);