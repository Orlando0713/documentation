"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[9598],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=i(n),c=r,y=d["".concat(p,".").concat(c)]||d[c]||m[c]||s;return n?a.createElement(y,l(l({ref:t},u),{},{components:n})):a.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var i=2;i<s;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},486:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return d}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),l=["components"],o={title:"Runtime Events"},p=void 0,i={unversionedId:"development/api/runtime-events",id:"development/api/runtime-events",title:"Runtime Events",description:"Studio supports a wide variety of events, both standard and custom, that allows you keep track of runtime usage data.",source:"@site/docs/development/api/runtime-events.md",sourceDirName:"development/api",slug:"/development/api/runtime-events",permalink:"/docs/development/api/runtime-events",draft:!1,editUrl:"https://github.com/xapp-ai/documentation/edit/main/docs/development/api/runtime-events.md",tags:[],version:"current",frontMatter:{title:"Runtime Events"}},u={},d=[{value:"Event Keys",id:"event-keys",level:2},{value:"REQUEST Type Events",id:"request-type-events",level:2},{value:"LAUNCH_REQUEST",id:"launch_request",level:3},{value:"AnalyticsEvents Type Events",id:"analyticsevents-type-events",level:2},{value:"REQUEST_RESPONSE",id:"request_response",level:3},{value:"Events API",id:"events-api",level:2}],m={toc:d},c="wrapper";function y(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Studio supports a wide variety of events, both standard and custom, that allows you keep track of runtime usage data."),(0,s.kt)("h2",{id:"event-keys"},"Event Keys"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Name"),(0,s.kt)("th",{parentName:"tr",align:null},"Key"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"App ID"),(0,s.kt)("td",{parentName:"tr",align:null},"appId"),(0,s.kt)("td",{parentName:"tr",align:null},"Application ID"),(0,s.kt)("td",{parentName:"tr",align:null},"string")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Session ID"),(0,s.kt)("td",{parentName:"tr",align:null},"sessionId"),(0,s.kt)("td",{parentName:"tr",align:null},"Unique ID that persists throughout an entire session"),(0,s.kt)("td",{parentName:"tr",align:null},"string")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"User ID"),(0,s.kt)("td",{parentName:"tr",align:null},"userId"),(0,s.kt)("td",{parentName:"tr",align:null},"Unique ID that is specific to the user and persists across sessions"),(0,s.kt)("td",{parentName:"tr",align:null},"string")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Type"),(0,s.kt)("td",{parentName:"tr",align:null},"type"),(0,s.kt)("td",{parentName:"tr",align:null},"Type of event, a category for organizing events."),(0,s.kt)("td",{parentName:"tr",align:null},'"REQUEST", "ERROR", "AnalyticsEvent"')),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Name"),(0,s.kt)("td",{parentName:"tr",align:null},"name"),(0,s.kt)("td",{parentName:"tr",align:null},"A subcategory of type."),(0,s.kt)("td",{parentName:"tr",align:null},"string")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Payload"),(0,s.kt)("td",{parentName:"tr",align:null},"payload"),(0,s.kt)("td",{parentName:"tr",align:null},"The details of the event"),(0,s.kt)("td",{parentName:"tr",align:null},"string, boolean, object, number or undefined")))),(0,s.kt)("h2",{id:"request-type-events"},"REQUEST Type Events"),(0,s.kt)("h3",{id:"launch_request"},"LAUNCH_REQUEST"),(0,s.kt)("p",null,"A ",(0,s.kt)("inlineCode",{parentName:"p"},"LAUNCH_REQUEST")," is used to document if a new session has started."),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Example Event")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "appId": "{{appId}}",\n    "channel": "postman",\n    "type": "REQUEST",\n    "name": "LAUNCH_REQUEST",\n    "platform": "postman",\n    "selectedHandler": "LaunchRequest",\n    "sessionId": "session-test-{{$randomUUID}}",\n    "userId": "user-test-{{$randomUUID}}"\n}\n')),(0,s.kt)("h2",{id:"analyticsevents-type-events"},"AnalyticsEvents Type Events"),(0,s.kt)("h3",{id:"request_response"},"REQUEST_RESPONSE"),(0,s.kt)("p",null,"A ",(0,s.kt)("inlineCode",{parentName:"p"},"REQUEST_RESPONSE")," event is used to document both the request from the user and the response back from the application.  The payloadload is a stringified object that contains the request, response, and optional tag."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {\n    Request,\n    Response\n} from "stentor-models";\n\nlet payload: { request: Request, response: Response, tag?: string };\n')),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Example Event")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "events": [\n        {\n            "appId": "{{appId}}",\n            "channel": "my-channel",\n            "type": "AnalyticsEvent",\n            "name": "REQUEST_RESPONSE",\n            "platform": "my-platform",\n            "selectedHandler": "LaunchRequest",\n            "sessionId": "session-test-{{$randomUUID}}",\n            "userId": "user-test-{{$randomUUID}}",\n            "payload": {\n                "request": {\n                    "type": "INTENT_REQUEST",\n                    "intentId": "HelpIntent",\n                    "rawQuery": "i need help",\n                    "sessionId": "session-test-{{$randomUUID}}",\n                    "userId": "user-test-{{$randomUUID}}",\n                    "matchConfidence": 1\n                },\n                "response": {\n                    "outputSpeech": {\n                        "displayText": "Here is what I found...",\n                        "ssml": "<speak>Here is what I found...</speak>"\n                    },\n                    "displays": [\n                          {\n                            "type": "LIST",\n                            "title": "Results",\n                            "items": [\n                                {\n                                    "title": "Title 1",\n                                    "token": "token-one",\n                                    "description": "Description 1"\n                                }\n                            ]\n                          }\n                    ]\n                }\n            }\n        }\n    ]\n}\n\n')),(0,s.kt)("h2",{id:"events-api"},"Events API"),(0,s.kt)("p",null,"You can PUT your own events to the API by using the following format:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"PUT")," ",(0,s.kt)("inlineCode",{parentName:"p"},"https://{{url}}/cms/apps/events")),(0,s.kt)("p",null,"Body"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "events": [\n        {\n            "appId": "{{appId}}",\n            "channel": "my-channel",\n            "type": "REQUEST",\n            "name": "LAUNCH_REQUEST",\n            "platform": "my-platform",\n            "selectedHandler": "LaunchRequest",\n            "sessionId": "session-test-{{$randomUUID}}",\n            "userId": "user-test-{{$randomUUID}}"\n        }\n    ]\n}\n')))}y.isMDXComponent=!0}}]);