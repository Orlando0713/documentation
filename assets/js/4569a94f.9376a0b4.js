"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[2722],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),d=o,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return t?a.createElement(f,c(c({ref:n},u),{},{components:t})):a.createElement(f,c({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,c=new Array(r);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<r;s++)c[s]=t[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5685:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),c=["components"],i={title:"IAM Policy for Stack Deployment"},l=void 0,s={unversionedId:"infrastructure/aws/iam-policy-for-deployment",id:"infrastructure/aws/iam-policy-for-deployment",title:"IAM Policy for Stack Deployment",description:"Typically the user launching the CloudFormation stack is an administrator on the account but in the situation where they are not, you can create a policy from the following JSON and apply it to the user that will be deploying:",source:"@site/docs/infrastructure/aws/iam-policy-for-deployment.md",sourceDirName:"infrastructure/aws",slug:"/infrastructure/aws/iam-policy-for-deployment",permalink:"/docs/infrastructure/aws/iam-policy-for-deployment",draft:!1,editUrl:"https://github.com/xapp-ai/documentation/edit/main/docs/infrastructure/aws/iam-policy-for-deployment.md",tags:[],version:"current",frontMatter:{title:"IAM Policy for Stack Deployment"},sidebar:"aws",previous:{title:"Verify your AWS Application Deployment",permalink:"/docs/infrastructure/aws/verify-deployment"},next:{title:"Single Tenancy on AWS",permalink:"/docs/infrastructure/aws/single-tenancy"}},u={},p=[],m={toc:p},d="wrapper";function f(e){var n=e.components,t=(0,o.Z)(e,c);return(0,r.kt)(d,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Typically the user launching the CloudFormation stack is an administrator on the account but in the situation where they are not, you can create a policy from the following JSON and apply it to the user that will be deploying:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": [\n        "iam:CreatePolicy",\n        "iam:CreateRole",\n        "iam:DeletePolicy",\n        "iam:DeleteRole",\n        "iam:DeleteRolePolicy",\n        "iam:GetRole",\n        "iam:GetRolePolicy",\n        "iam:PassRole",\n        "iam:PutRolePolicy"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "logs:CreateLogStream",\n        "logs:DeleteLogStream",\n        "logs:DeleteLogGroup",\n        "logs:CreateLogGroup"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "lambda:CreateFunction",\n        "lambda:InvokeFunction",\n        "lambda:GetFunction",\n        "lambda:DeleteFunction",\n        "lambda:AddPermission",\n        "lambda:RemovePermission"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "s3:CreateBucket",\n        "s3:ListBucket",\n        "s3:PutEncryptionConfiguration",\n        "s3:DeleteBucket",\n        "s3:PutBucketPublicAccessBlock",\n        "s3:PutBucketPolicy",\n        "s3:GetBucketPolicy",\n        "s3:DeleteBucketPolicy"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "dynamodb:ListTables",\n        "dynamodb:DescribeContinuousBackups",\n        "dynamodb:UpdateContinuousBackups",\n        "dynamodb:CreateTable",\n        "dynamodb:DescribeTable",\n        "dynamodb:DeleteTable"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "application-autoscaling:DescribeScalingPolicies",\n        "application-autoscaling:RegisterScalableTarget",\n        "application-autoscaling:DescribeScalableTargets",\n        "application-autoscaling:DeleteScalingPolicy",\n        "application-autoscaling:PutScalingPolicy",\n        "application-autoscaling:DeregisterScalableTarget"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "kendra:CreateDataSource",\n        "kendra:DescribeDataSource",\n        "kendra:DeleteDataSource",\n        "kendra:ListTagsForResource",\n        "kendra:CreateIndex",\n        "kendra:UpdateIndex",\n        "kendra:DescribeIndex",\n        "kendra:DeleteIndex"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "apigateway:GET",\n        "apigateway:PATCH",\n        "apigateway:PUT",\n        "apigateway:POST",\n        "apigateway:DELETE"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "cloudformation:GetTemplateSummary",\n        "cloudformation:ListStacks",\n        "cloudformation:CreateStack"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "s3:GetObject",\n      "Resource": [\n        "arn:aws:s3:::xapp-ai-deployment/precheck.zip",\n        "arn:aws:s3:::xapp-ai-deployment/studio.zip",\n        "arn:aws:s3:::xapp-ai-deployment/posttext.zip",\n        "arn:aws:s3:::xapp-ai-deployment/startprov.zip"\n      ]\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "secretsmanager:CreateSecret",\n        "secretsmanager:TagResource",\n        "secretsmanager:ListSecrets"\n      ],\n      "Resource": "*"\n    }\n  ]\n}\n\n')),(0,r.kt)("p",null,"You can make this more strict if you like but it will require some substitutions for ",(0,r.kt)("inlineCode",{parentName:"p"},"<accountNumber>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<stackName>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<appId>"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Action": [\n                "iam:CreateRole",\n                "iam:GetRolePolicy",\n                "iam:PutRolePolicy",\n                "iam:PassRole",\n                "iam:DeleteRolePolicy",\n                "iam:GetRole",\n                "iam:DeleteRole"\n            ],\n            "Resource": [\n                "arn:aws:iam::<accountNumber>:role/<stackName>-PostTextLambdaRole*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-PreCheckLambdaRole-*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-ProvisioningLambdaRole-*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-StudioLambdaRole-*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-XappAIKendraDataSourceRole-*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-XappAIKendraIndexRole-*",\n                "arn:aws:iam::<accountNumber>:role/<stackName>-scalingRole-*",\n                "arn:aws:iam::<accountNumber>:role/xapp-management-<appId>"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "kendra:CreateIndex"\n            ],\n            "Resource": [\n                "*"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "kendra:ListTagsForResource",\n                "kendra:UpdateIndex",\n                "kendra:DescribeIndex",\n                "kendra:DeleteIndex",\n                "kendra:CreateDataSource",\n                "kendra:DescribeDataSource",\n                "kendra:DeleteDataSource"\n            ],\n            "Resource": [\n                "arn:aws:kendra:us-east-1:<accountNumber>:index/*"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "dynamodb:ListTables",\n                "dynamodb:CreateTable"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "dynamodb:DescribeContinuousBackups",\n                "dynamodb:UpdateContinuousBackups",\n                "dynamodb:DescribeTable",\n                "dynamodb:DeleteTable"\n            ],\n            "Resource": [\n                "arn:aws:dynamodb:us-east-1:<accountNumber>:table/studio-user-<appId>"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "lambda:CreateFunction"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "lambda:InvokeFunction",\n                "lambda:GetFunction",\n                "lambda:DeleteFunction",\n                "lambda:AddPermission",\n                "lambda:RemovePermission"\n            ],\n            "Resource": [\n                "arn:aws:lambda:us-east-1:<accountNumber>:function:xapp-posttext-<appId>",\n                "arn:aws:lambda:us-east-1:<accountNumber>:function:xapp-precheck-<appId>",\n                "arn:aws:lambda:us-east-1:<accountNumber>:function:xapp-provisioning-<appId>",\n                "arn:aws:lambda:us-east-1:<accountNumber>:function:xapp-<appId>"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "s3:CreateBucket"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "s3:ListBucket",\n                "s3:PutEncryptionConfiguration",\n                "s3:DeleteBucket",\n                "s3:PutBucketPublicAccessBlock",\n                "s3:PutBucketPolicy",\n                "s3:GetBucketPolicy",\n                "s3:DeleteBucketPolicy"\n            ],\n            "Resource": [\n                "arn:aws:s3:::<stackName>-xappairesourcebucket-*"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "logs:CreateLogStream",\n                "logs:DeleteLogStream",\n                "logs:DeleteLogGroup",\n                "logs:CreateLogGroup"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "apigateway:GET",\n                "apigateway:PATCH",\n                "apigateway:PUT",\n                "apigateway:POST",\n                "apigateway:DELETE"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "application-autoscaling:DescribeScalingPolicies",\n                "application-autoscaling:RegisterScalableTarget",\n                "application-autoscaling:DescribeScalableTargets",\n                "application-autoscaling:DeleteScalingPolicy",\n                "application-autoscaling:PutScalingPolicy",\n                "application-autoscaling:DeregisterScalableTarget"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": "s3:GetObject",\n            "Resource": [\n                "arn:aws:s3:::xapp-ai-deployment/precheck.zip",\n                "arn:aws:s3:::xapp-ai-deployment/studio.zip",\n                "arn:aws:s3:::xapp-ai-deployment/posttext.zip",\n                "arn:aws:s3:::xapp-ai-deployment/startprov.zip"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "secretsmanager:CreateSecret",\n                "secretsmanager:TagResource",\n                "secretsmanager:ListSecrets"\n            ],\n            "Resource": "*"\n        }, \n        {\n            "Effect": "Allow",\n            "Action": [\n                "cloudformation:GetTemplateSummary",\n                "cloudformation:ListStacks",\n                "cloudformation:CreateStack"\n            ],\n            "Resource": "*"\n        },\n    ]\n}\n')))}f.isMDXComponent=!0}}]);