"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[6886],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(f,l(l({ref:n},c),{},{components:t})):a.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8806:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),l=["components"],i={title:"Running Locally"},s=void 0,p={unversionedId:"development/running-locally",id:"development/running-locally",title:"Running Locally",description:"It is often helpful during development to run the application locally and have requests go to your computer. At a high level, this is a",source:"@site/docs/development/running-locally.md",sourceDirName:"development",slug:"/development/running-locally",permalink:"/docs/development/running-locally",draft:!1,editUrl:"https://github.com/xapp-ai/documentation/edit/main/docs/development/running-locally.md",tags:[],version:"current",frontMatter:{title:"Running Locally"},sidebar:"docs",previous:{title:"NLU",permalink:"/docs/development/nlu"},next:{title:"Runtime Environment Variables",permalink:"/docs/development/runtime-environment-variables"}},c={},u=[],m={toc:u},d="wrapper";function f(e){var n=e.components,t=(0,o.Z)(e,l);return(0,r.kt)(d,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"It is often helpful during development to run the application locally and have requests go to your computer. At a high level, this is a"),(0,r.kt)("p",null,"If you are using Lex, you can setup a lambda that is a proxy to your local machine that is running NGROK"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"This example uses ",(0,r.kt)("a",{parentName:"p",href:"https://ngrok.com/"},"NGROK")," to setup a proxy to your local development environment.  Other similar tools can be used but not all of the below steps will apply.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup ",(0,r.kt)("a",{parentName:"p",href:"https://ngrok.com/"},"NGROK"),", optional if you already have NGROK (or similar) installed"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"NGROK allows you to expose your local development environment as a public URL"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup a lambda that is a proxy to your machine"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This will then be used instead of a cloud based lambda as the fulfillment for your Lex bot."),(0,r.kt)("li",{parentName:"ul"},"Create a new Lambda on the AWS console, a recommended name is ",(0,r.kt)("inlineCode",{parentName:"li"},"{initials}-proxy")," so you can recognize your proxy."),(0,r.kt)("li",{parentName:"ul"},"Copy and paste the following into the code block for the lambda.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\nvar https = require('https');\n\nexports.handler = (event, context, callback) => {\n\n    const finalEvent = JSON.stringify(event);\n\n    try {\n        const options = {\n            host: process.env.HOST,\n            path: \"/\",\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Content-Length': Buffer.byteLength(finalEvent)\n            },\n        };\n\n        const req = https.request(options, (res) => {\n\n            let data = '';\n            console.log('STATUS: ' + res.statusCode);\n            res.setEncoding('utf8');\n\n            res.on('data', (chunk) => {\n                console.log(\"data\");\n                console.log(chunk);\n                data += chunk;\n\n            });\n            res.on('end', () => {\n                console.log('No more data in response.');\n                let result;\n                try {\n                    result = JSON.parse(data.toString());\n                    callback(null, result);\n                } catch (e) {\n                    callback(null, {'error': 'Unable to parse response: ' + e.toString()});\n                }\n            });\n        });\n        req.on('error', (err) => {\n            console.log('problem with request:', err.toString());\n        });\n        // write data to request body\n        console.log('writing request');\n        console.log(finalEvent);\n        req.write(finalEvent);\n        req.end();\n    } catch (ex) {\n        console.log(ex.message);\n        callback(null, ex.message);\n    }\n};\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configure the Lambda to point to your machine "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Create an environment variable ",(0,r.kt)("inlineCode",{parentName:"li"},"HOST")," and set it to your NGROK proxy, for example ",(0,r.kt)("inlineCode",{parentName:"li"},"213cd.ngrok.io"),"."),(0,r.kt)("li",{parentName:"ul"},"If you are a paid NGROK customer, this will be constant, if you are not this will be created new every time you start NGROK."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create an IAM policy that allows you to run your application locally"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For the IAM policy to run the application, create one based on the template below while replacing REGION, ACCOUNT_NUMBER, LAMBDA_NAME and TABLE_NAME fields with the app you will be running locally.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Action": [\n                "logs:CreateLogStream",\n                "logs:CreateLogGroup"\n            ],\n            "Resource": [\n                "arn:aws:logs:{{REGION}}:{{ACCOUNT_NUMBER}}:log-group:/aws/lambda/{{LAMBDA_NAME}}:*"\n            ],\n            "Effect": "Allow"\n        },\n        {\n            "Action": [\n                "logs:PutLogEvents"\n            ],\n            "Resource": [\n                "arn:aws:logs:{{REGION}}:{{ACCOUNT_NUMBER}}:log-group:/aws/lambda/{{LAMBDA_NAME}}:*:*"\n            ],\n            "Effect": "Allow"\n        },\n        {\n            "Action": [\n                "dynamodb:PutItem",\n                "dynamodb:UpdateItem",\n                "dynamodb:GetItem"\n            ],\n            "Resource": [\n                "arn:aws:dynamodb:{{REGION}}:{{ACCOUNT_NUMBER}}:table/{{TABLE_NAME}}"\n            ],\n            "Effect": "Allow"\n        },\n        {\n            "Action": [\n                "lex:*",\n                "kendra:*"\n            ],\n            "Resource": [\n                "*"\n            ],\n            "Effect": "Allow"\n        },\n        {\n            "Action": [\n                "secretsmanager:GetSecretValue"\n            ],\n            "Resource": [\n                "arn:aws:secretsmanager:{{REGION}}:{{ACCOUNT_NUMBER}}:secret:{{SECRET_NAME}}*"\n            ],\n            "Effect": "Allow"\n        }\n    ]\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new user with programmatic access and apply the policy to the user."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Download the credentials, add them to your ",(0,r.kt)("inlineCode",{parentName:"li"},".aws/credentials")," file as a profile."),(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"export AWS_PROFILE=profile-name")," before you start your local server."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start your local server for your application"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If you are using one of the provided templates or starter projects, run ",(0,r.kt)("inlineCode",{parentName:"li"},"yarn start")," from the root of the project"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure you have the correct settings in your .env file at the root of the project you are running:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-env"},"AWS_REGION={{REGION}}\nSTUDIO_APP_ID={{APP_ID}}\nSTUDIO_TOKEN={{TOKEN_FROM_STUDIO_SPECIFIC_TO_APP_ID}}\nUSER_STORAGE_TABLE=studio-{{APP_ID}}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Validate everything is working by sending a sample payload with a POST to your localhost"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A tool like Postman will allow you to do this easily.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "LAUNCH_REQUEST",\n    "sessionId": "stentor-widget-session-86c2f7b3-9318-651f-b6ee-5b9bcf26bd8f",\n    "userId": "stentor-widget-user-cbf4f5ad-c3fc-6562-835d-afff7eeaab77",\n    "isNewSession": true,\n    "intentId": "LaunchRequest",\n    "platform": "stentor-platform",\n    "channel": "widget"\n}\n')))))}f.isMDXComponent=!0}}]);